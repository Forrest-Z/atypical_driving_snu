<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <arg name = "bagfile" default= ""/>
  <arg name = "use_sim_time" default= "false"/>

  <arg name = "pcl_topic" default = "/velodyne_points_snu"/>
    <!-- Arguments Start -->
  <arg name ="snu_frame_id" default="SNU"/>
  <arg name ="occu_frame_id" default="SNU"/>
  <arg name ="world_frame_id" default="map"/>
  <arg name ="car_base_frame_id" default="/base_link"/>
  <arg name ="lidar_frame_id" default = "velodyne"/>
  <arg name ="detected_object_frame_id" default = "velodyne"/>


  <arg name = "lane_width" default="5"/>
  <arg name = "lane_csv_file" default = "$(find atypical_driving)/lane/interpolated_yugokri_path1.csv"/>
  <arg name = "log_file_prefix" default= "$(find atypical_driving)/log/log" />

  <arg name = "goal/x"  default = "451489.3968"/> <!--in world frame -->
  <arg name = "goal/y" default = "3947475.6160"/> <!--in world frame -->


    <arg name = "period" default= "0.1"/>
    <arg name = "horizon"  default= "5"/> <!--Also change dimension.h-->
    <arg name="planning_dt" default="0.1"/>

  <group ns="atypical_planning_test">
    <rosparam file="$(find atypical_driving)/param/MPC_weight.yaml"/>
  </group>


    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="$(arg pcl_topic)"/>
<!--        <remap from="cloud_in" to="/octomap_point_cloud_centers"/>--> -->

        <remap from="scan" to="/scan"/>
        <rosparam>
            target_frame:  velodyne # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -1.5
            max_height: 0.1

            angle_min: -3.1408 # -M_PI/2
            angle_max: 3.1408 # M_PI/2
            angle_increment: 0.0027 # M_PI/360.0
            scan_time: 0.0333
            range_min: 0.0
            range_max: 100.0
            use_inf: true
            inf_epsilon: 100.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>


    <!--  1. OccupancyGrid  -->
     <include file = "$(find atypical_driving)/launch/occupancy2d/costmap_2d.launch">
         <arg name = "play_bag" value = "false"/>
         <arg name = "bagfile" value="$(arg bagfile)"/>
         <arg name = "use_sim_time" value="$(arg use_sim_time)"/>
         <arg name = "rviz" value = "false"/>
         <arg name = "occupancy_frame_id" value = "$(arg occu_frame_id)"/>
         <arg name = "lidar_frame_id" value = "$(arg lidar_frame_id)"/>
     </include>


    <!--2. snu_car_tf to velodyne_tf -->
    <node pkg="tf" type="static_transform_publisher" name="link2lidar" args="-0.5 0 0.2 0 0 0  $(arg car_base_frame_id) $(arg lidar_frame_id) 100"/>

    <!--3. client-->
    <node pkg="atypical_driving" type="keti_client" name="atypical_driving_client" output="screen">
        <param name="rejection_radius" value="1.6"/>
    </node>

    <!--3. server-->
    <node pkg="atypical_driving" type="integration_server" name="atypical_planning_test" output="screen">

        <remap from = "/occupancy_grid" to = "/costmap_node/costmap/costmap"/>
        <remap from = "/current_pose" to = "/current_pose_cov"/>
        <remap from = "/vehicle_cmd" to = "/vehicle_cmd_snu"/>

        <param name = "world_frame_id" value="$(arg world_frame_id)" />
        <param name = "snu_frame_id" value="$(arg snu_frame_id)" />
        <param name = "occu_map_frame_id" value="$(arg occu_frame_id)" />
        <param name = "base_link_id" value="$(arg car_base_frame_id)" />
        <param name = "detected_objects_id" value="$(arg detected_object_frame_id)" />

        <!--Shaping params for nominal_speed selection-->
        <param name = "vmax" value = "5"/> <!--m/s-->
        <param name = "vmin" value = "0.2"/> <!--m/s-->
        <param name = "curve_thres" value = "0.15"/> <!--m/s-->

        <param name = "goal/x" value = "$(arg goal/x)"/>
        <param name = "goal/y" value = "$(arg goal/y)"/>
        <param name = "goal_thres" value = "1.5"/>

        <param name = "lane_csv_file" value = "$(arg lane_csv_file)"/>
        <param name = "lane_width" value="$(arg lane_width)"/>
        <param name = "log_file_prefix" value = "$(arg log_file_prefix)" />


        <param name="global_planner/period" value="$(arg period)" />
        <param name="global_planner/grid_resolution" value="0.3" />
        <param name="global_planner/max_steering_angle" value="$(eval 3.14/20)"/>
        <param name="global_planner/smoothing_distance" value="16" />
        <param name="global_planner/smoothing_cliff_min_bias" value="1.0" />
        <param name="global_planner/smoothing_cliff_ratio" value="0.5"/>
        <param name="global_planner/start_smoothing_distance" value="8" />
        <param name="global_planner/corridor_width_min" value = "0.0"/>
        <param name="global_planner/corridor_width_dynamic_min" value="8.0"/>
	    <param name="global_planner/safe_distance" value = "10"/>
	    <param name="global_planner/nominal_acceleration" value="1.0"/>
	    <param name="global_planner/object_velocity_threshold" value="-0.2"/>

        <param name="local_planner/horizon" value="$(arg horizon)" />
        <param name="local_planner/ts" value="$(arg planning_dt)" />
        <param name="local_planner/max_steer" value="0.52" />
        <param name="local_planner/max_accel" value="1" />
        <param name="local_planner/min_accel" value="-3" />
        <param name="local_planner/N_corr" value="5" />
        <param name="local_planner/isRearWheel" value="false"/>
        <param name="local_planner/dyn_obst_range" value="30.0"/>
    	<param name="local_planner/sfc_margin" value="0.5"/>

	    <!--smoothing_type: 0:Exponential Average(0924test), 1:Moving Average, 2:Acc(exp),Steer(mov), 3:ignore small handling -->
	    <!--ignore_angle, 1deg: 0.017, 2deg: 0.035, 3deg: 0.052, 4deg: 0.070 -->
	    <param name = "smooth_weight" value="0.7"/>
        <param name = "moving_horizon" value="20"/>
        <param name = "smoothing_type" value="0"/>
	    <param name = "ignore_angle" value="0.017"/>
        <param name = "stopSpeed" value="0.5"/>


        <param name="predictor/observation_queue" value="10" />
        <param name="predictor/ref_height" value="0.4" />
        <param name="predictor/log_dir" value="$(find atypical_driving)/log/predictor" />
    </node>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find atypical_driving)/launch/rviz_config/config.rviz" output="log" />


</launch>
